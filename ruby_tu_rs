#!/usr/bin/env ruby
 
require 'fileutils'
 
class TestFinder
  attr_reader :prefix
  def initialize(prefix)
    @prefix = prefix
  end
 
 
  def name_to_file(name, line = nil)
    file = "#{prefix}/#{name}_test.rb"
    file << ":#{line}" if line
    file
  end
 
  def file_to_name(file)
    file.sub(%r{^#{Regexp.escape(prefix)}/}, '').sub(%r{_test\.rb$}, '')
  end
 
  def test_files
    @test_files ||= Dir["#{prefix}/**/*_test.rb"]
  end
 
  def test_names
    @test_names ||= test_files.collect {|file| file_to_name(file) }
  end
 
  def run(tests)
    if tests.empty?
      if test_files.empty?
        puts "Nothing to do."
      else
        run(test_files)
      end
    else
      tests = tests.collect {|test| force_test_file(test) }
      puts "Running:\n#{tests.join("\n")}"
      exec("script/spec", *tests)
    end
  end
 
  def list
    puts test_names.sort.join("\n")
  end
 
  private
 
  def force_test_file(test_and_line)
    test, line = test_and_line.split(':')
    if test_files.include?(test)
      test_and_line
    elsif test_names.include?(test)
      name_to_file(test, line)
    else
      raise "No such test: #{test.inspect}"
    end
  end
end
 
list = ARGV.delete('-l') || ARGV.delete('--list')
prefix = ARGV.shift
prefix = prefix ? "test/#{prefix}" : 'test'
finder = TestFinder.new(prefix)
tests = ARGV.dup
 
if list
  finder.list
else
  finder.run(tests)
end

